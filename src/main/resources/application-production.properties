# Production Configuration for Spring Boot Twitch Chat Reader
# This configuration is used when SPRING_PROFILES_ACTIVE=production
# Optimized for Replit Autoscale deployment

# Server Configuration for Autoscale/Reserved VM
server.port=${PORT:5000}
server.address=0.0.0.0
server.servlet.context-path=/
server.compression.enabled=true
server.compression.mime-types=text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json

# Production Logging
logging.level.com.github.twitch4j=WARN
logging.level.com.twitchchat=INFO
logging.level.org.eclipse.jetty=WARN
logging.level.io.netty=WARN
logging.level.org.springframework=WARN
logging.level.org.hibernate=WARN
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# Database Configuration for Production
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false

# Connection Pool Settings for Production
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000

# WebSocket Configuration for Production
spring.websocket.sockjs.transport.websocket.message-size-limit=8192
spring.websocket.sockjs.transport.websocket.buffer-size-limit=8192

# Performance Settings
spring.jpa.properties.hibernate.jdbc.batch_size=100
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true

# Actuator for Health Checks (needed for Dockerfile health check)
management.endpoints.web.exposure.include=health
management.endpoint.health.show-details=when-authorized
management.health.db.enabled=true